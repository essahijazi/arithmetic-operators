arithmetic operators

three categories of operators
- basic operators + - /* %
- prefix/postfix operators ++ --
- compound operators += -= *= /+ %=

*******************************

basic operators

- adding, subtracting, multiplying and modulus between integers or floating point is the same
e.g.
1 + 2 = 3
1.0 + 2.0 = 3.0

3 - 2 = 1
3.0 - 2.0 = 1.0

4 * 2 = 8
4.0 * 2.0 = 8.0

13 % 5 = 3
13.0 % 5.0 = 3.0

- dividing between integers or floating points is NOT the same
13 / 5 = 2 //integers do not have decimals
13.0 / 5.0 = 2.6


*******************************

prefix/postfix operators

++ increments value by 1
-- decrements value by 1   

examples

int myVal = 5;
System.out.println(++myVal); //will print out 6, using the prefix operators ensures that the increment operation is applied before returning the value

int anotherVal = 9;
System.out.println(++anotherVal); //will print 9, using the postfix operators will apply the change after returning the value
System.out.println(anotherVal); //will print 10 this time as antherVal was incremented just after being returned in the previous statement


*******************************

compound operators

- combines operation and assignment
- it applies the result of the right side to the left side
- stores that result in variable on left side

e.g.

int myVal = 50;
myVal -= 5;// this is the same as typing myVal = myVal - 5;

*******************************

operator precedence

operators are evaluated in the following order
- postfix x++ x--
- prefix ++x --x
- multiplicative * / %
- additive + -

- operators of equal precedence are evaluated from left to right
- can override precedence with use of parenthesis
- nested parenthesis are evaluated from the inside out